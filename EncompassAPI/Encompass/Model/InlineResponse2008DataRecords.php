<?php
/**
 * InlineResponse2008DataRecords
 *
 * PHP version 5
 *
 * @category Class
 * @package  Encompass\SDK
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Encompass Supply Chain Solutions
 *
 * Services require a user name and password that must be obtained from Encompass.  We issue a single set of credentials for all invironments.  Please make sure you are pointing to the correct endpoint described in the __servers__ section.  Services all return the elements `status->errorCode` and `status->errorMessage`.  Successful reqeusts will return a __100__ `errorCode`.   If you have any questions that are not answered here or would like to discuss the overall process, please contact your account rep to schedule a technical call.
 *
 * OpenAPI spec version: 1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.41
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Encompass\SDK\Model;

use \ArrayAccess;
use \Encompass\SDK\ObjectSerializer;

/**
 * InlineResponse2008DataRecords Class Doc Comment
 *
 * @category Class
 * @package  Encompass\SDK
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class InlineResponse2008DataRecords implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'inline_response_200_8_data_records';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'open' => 'string',
'reference_number1' => 'string',
'reference_number2' => 'string',
'order_number' => 'string',
'order_date' => '\DateTime',
'invoice_number' => 'string',
'invoice_date' => '\DateTime',
'freight_amount' => 'string',
'tax_amount' => 'string',
'total_amount' => 'string',
'carrier_name' => 'string',
'shipping_method' => 'string',
'days' => 'float',
'parts' => '\Encompass\SDK\Model\InlineResponse2008DataParts[]',
'custom_order_fields' => '\Encompass\SDK\Model\InlineResponse2008DataCustomOrderFields[]',
'carrier_activity' => '\Encompass\SDK\Model\InlineResponse2008DataCarrierActivity'    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'open' => null,
'reference_number1' => null,
'reference_number2' => null,
'order_number' => null,
'order_date' => 'date',
'invoice_number' => null,
'invoice_date' => 'date',
'freight_amount' => null,
'tax_amount' => null,
'total_amount' => null,
'carrier_name' => null,
'shipping_method' => null,
'days' => null,
'parts' => null,
'custom_order_fields' => null,
'carrier_activity' => null    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'open' => 'open',
'reference_number1' => 'referenceNumber1',
'reference_number2' => 'referenceNumber2',
'order_number' => 'orderNumber',
'order_date' => 'orderDate',
'invoice_number' => 'invoiceNumber',
'invoice_date' => 'invoiceDate',
'freight_amount' => 'freightAmount',
'tax_amount' => 'taxAmount',
'total_amount' => 'totalAmount',
'carrier_name' => 'carrierName',
'shipping_method' => 'shippingMethod',
'days' => 'days',
'parts' => 'parts',
'custom_order_fields' => 'customOrderFields',
'carrier_activity' => 'carrierActivity'    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'open' => 'setOpen',
'reference_number1' => 'setReferenceNumber1',
'reference_number2' => 'setReferenceNumber2',
'order_number' => 'setOrderNumber',
'order_date' => 'setOrderDate',
'invoice_number' => 'setInvoiceNumber',
'invoice_date' => 'setInvoiceDate',
'freight_amount' => 'setFreightAmount',
'tax_amount' => 'setTaxAmount',
'total_amount' => 'setTotalAmount',
'carrier_name' => 'setCarrierName',
'shipping_method' => 'setShippingMethod',
'days' => 'setDays',
'parts' => 'setParts',
'custom_order_fields' => 'setCustomOrderFields',
'carrier_activity' => 'setCarrierActivity'    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'open' => 'getOpen',
'reference_number1' => 'getReferenceNumber1',
'reference_number2' => 'getReferenceNumber2',
'order_number' => 'getOrderNumber',
'order_date' => 'getOrderDate',
'invoice_number' => 'getInvoiceNumber',
'invoice_date' => 'getInvoiceDate',
'freight_amount' => 'getFreightAmount',
'tax_amount' => 'getTaxAmount',
'total_amount' => 'getTotalAmount',
'carrier_name' => 'getCarrierName',
'shipping_method' => 'getShippingMethod',
'days' => 'getDays',
'parts' => 'getParts',
'custom_order_fields' => 'getCustomOrderFields',
'carrier_activity' => 'getCarrierActivity'    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['open'] = isset($data['open']) ? $data['open'] : null;
        $this->container['reference_number1'] = isset($data['reference_number1']) ? $data['reference_number1'] : null;
        $this->container['reference_number2'] = isset($data['reference_number2']) ? $data['reference_number2'] : null;
        $this->container['order_number'] = isset($data['order_number']) ? $data['order_number'] : null;
        $this->container['order_date'] = isset($data['order_date']) ? $data['order_date'] : null;
        $this->container['invoice_number'] = isset($data['invoice_number']) ? $data['invoice_number'] : null;
        $this->container['invoice_date'] = isset($data['invoice_date']) ? $data['invoice_date'] : null;
        $this->container['freight_amount'] = isset($data['freight_amount']) ? $data['freight_amount'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['total_amount'] = isset($data['total_amount']) ? $data['total_amount'] : null;
        $this->container['carrier_name'] = isset($data['carrier_name']) ? $data['carrier_name'] : null;
        $this->container['shipping_method'] = isset($data['shipping_method']) ? $data['shipping_method'] : null;
        $this->container['days'] = isset($data['days']) ? $data['days'] : null;
        $this->container['parts'] = isset($data['parts']) ? $data['parts'] : null;
        $this->container['custom_order_fields'] = isset($data['custom_order_fields']) ? $data['custom_order_fields'] : null;
        $this->container['carrier_activity'] = isset($data['carrier_activity']) ? $data['carrier_activity'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets open
     *
     * @return string
     */
    public function getOpen()
    {
        return $this->container['open'];
    }

    /**
     * Sets open
     *
     * @param string $open order or invoice has open items (Y/N)
     *
     * @return $this
     */
    public function setOpen($open)
    {
        $this->container['open'] = $open;

        return $this;
    }

    /**
     * Gets reference_number1
     *
     * @return string
     */
    public function getReferenceNumber1()
    {
        return $this->container['reference_number1'];
    }

    /**
     * Sets reference_number1
     *
     * @param string $reference_number1 main reference number
     *
     * @return $this
     */
    public function setReferenceNumber1($reference_number1)
    {
        $this->container['reference_number1'] = $reference_number1;

        return $this;
    }

    /**
     * Gets reference_number2
     *
     * @return string
     */
    public function getReferenceNumber2()
    {
        return $this->container['reference_number2'];
    }

    /**
     * Sets reference_number2
     *
     * @param string $reference_number2 main reference number or claim number
     *
     * @return $this
     */
    public function setReferenceNumber2($reference_number2)
    {
        $this->container['reference_number2'] = $reference_number2;

        return $this;
    }

    /**
     * Gets order_number
     *
     * @return string
     */
    public function getOrderNumber()
    {
        return $this->container['order_number'];
    }

    /**
     * Sets order_number
     *
     * @param string $order_number order_number
     *
     * @return $this
     */
    public function setOrderNumber($order_number)
    {
        $this->container['order_number'] = $order_number;

        return $this;
    }

    /**
     * Gets order_date
     *
     * @return \DateTime
     */
    public function getOrderDate()
    {
        return $this->container['order_date'];
    }

    /**
     * Sets order_date
     *
     * @param \DateTime $order_date order_date
     *
     * @return $this
     */
    public function setOrderDate($order_date)
    {
        $this->container['order_date'] = $order_date;

        return $this;
    }

    /**
     * Gets invoice_number
     *
     * @return string
     */
    public function getInvoiceNumber()
    {
        return $this->container['invoice_number'];
    }

    /**
     * Sets invoice_number
     *
     * @param string $invoice_number invoice_number
     *
     * @return $this
     */
    public function setInvoiceNumber($invoice_number)
    {
        $this->container['invoice_number'] = $invoice_number;

        return $this;
    }

    /**
     * Gets invoice_date
     *
     * @return \DateTime
     */
    public function getInvoiceDate()
    {
        return $this->container['invoice_date'];
    }

    /**
     * Sets invoice_date
     *
     * @param \DateTime $invoice_date invoice_date
     *
     * @return $this
     */
    public function setInvoiceDate($invoice_date)
    {
        $this->container['invoice_date'] = $invoice_date;

        return $this;
    }

    /**
     * Gets freight_amount
     *
     * @return string
     */
    public function getFreightAmount()
    {
        return $this->container['freight_amount'];
    }

    /**
     * Sets freight_amount
     *
     * @param string $freight_amount freight_amount
     *
     * @return $this
     */
    public function setFreightAmount($freight_amount)
    {
        $this->container['freight_amount'] = $freight_amount;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return string
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param string $tax_amount tax_amount
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets total_amount
     *
     * @return string
     */
    public function getTotalAmount()
    {
        return $this->container['total_amount'];
    }

    /**
     * Sets total_amount
     *
     * @param string $total_amount total_amount
     *
     * @return $this
     */
    public function setTotalAmount($total_amount)
    {
        $this->container['total_amount'] = $total_amount;

        return $this;
    }

    /**
     * Gets carrier_name
     *
     * @return string
     */
    public function getCarrierName()
    {
        return $this->container['carrier_name'];
    }

    /**
     * Sets carrier_name
     *
     * @param string $carrier_name carrier name
     *
     * @return $this
     */
    public function setCarrierName($carrier_name)
    {
        $this->container['carrier_name'] = $carrier_name;

        return $this;
    }

    /**
     * Gets shipping_method
     *
     * @return string
     */
    public function getShippingMethod()
    {
        return $this->container['shipping_method'];
    }

    /**
     * Sets shipping_method
     *
     * @param string $shipping_method shipping service
     *
     * @return $this
     */
    public function setShippingMethod($shipping_method)
    {
        $this->container['shipping_method'] = $shipping_method;

        return $this;
    }

    /**
     * Gets days
     *
     * @return float
     */
    public function getDays()
    {
        return $this->container['days'];
    }

    /**
     * Sets days
     *
     * @param float $days number of days old
     *
     * @return $this
     */
    public function setDays($days)
    {
        $this->container['days'] = $days;

        return $this;
    }

    /**
     * Gets parts
     *
     * @return \Encompass\SDK\Model\InlineResponse2008DataParts[]
     */
    public function getParts()
    {
        return $this->container['parts'];
    }

    /**
     * Sets parts
     *
     * @param \Encompass\SDK\Model\InlineResponse2008DataParts[] $parts array of part details
     *
     * @return $this
     */
    public function setParts($parts)
    {
        $this->container['parts'] = $parts;

        return $this;
    }

    /**
     * Gets custom_order_fields
     *
     * @return \Encompass\SDK\Model\InlineResponse2008DataCustomOrderFields[]
     */
    public function getCustomOrderFields()
    {
        return $this->container['custom_order_fields'];
    }

    /**
     * Sets custom_order_fields
     *
     * @param \Encompass\SDK\Model\InlineResponse2008DataCustomOrderFields[] $custom_order_fields array of values that will be returned at the order level if they were provided during the order process
     *
     * @return $this
     */
    public function setCustomOrderFields($custom_order_fields)
    {
        $this->container['custom_order_fields'] = $custom_order_fields;

        return $this;
    }

    /**
     * Gets carrier_activity
     *
     * @return \Encompass\SDK\Model\InlineResponse2008DataCarrierActivity
     */
    public function getCarrierActivity()
    {
        return $this->container['carrier_activity'];
    }

    /**
     * Sets carrier_activity
     *
     * @param \Encompass\SDK\Model\InlineResponse2008DataCarrierActivity $carrier_activity carrier_activity
     *
     * @return $this
     */
    public function setCarrierActivity($carrier_activity)
    {
        $this->container['carrier_activity'] = $carrier_activity;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange] 
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange] 
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange] 
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
